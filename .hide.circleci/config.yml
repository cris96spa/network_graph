# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  discord: teka23/discord@0.0.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  make-version:
    working_directory: ~/project/ml3-repo-template
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.12
    # Use a machine with 2 cores and 4GB RAM
    resource_class: small
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          # Gracefully stop job if the commit does not have a valid (make-*) trigger
          name: "Check if (make-*) trigger"
          command: |
            GIT_COMMIT_DESC=$(git log --format=oneline -n 1 $CIRCLE_SHA1);
            if [[ ! $(echo "${GIT_COMMIT_DESC}" | sed -nE 's/(\(make-(dev|patch|minor|major)\))/\1/p') ]]; then
              circleci-agent step halt;
            fi
      - run:
          name: "Set GIT config"
          command: "git config user.name CircleCI  && git config user.email mlcubedevteam@gmail.com"
      - run:
          name: "Configure Poetry"
          command: "make add-private-pypi && poetry config virtualenvs.create false"
      - run:
          name: "Setup environment"
          command: "make minimum-requirements && poetry run pip install --upgrade -r requirements.txt --trusted-host pypi.mlcube.com"
      - run:
          name: "Create version and publish"
          command: "make version"
      - run:
          name: "Get new version tag"
          command: |
            echo "export NEW_VERSION=$(git describe --tags `git rev-list --tags --max-count=1` | tr -d '[:space:]')" >> "$BASH_ENV"
            source "$BASH_ENV"
      - discord/status:
          failure_message: "[$NEW_VERSION] Failed to publish new version! :octagonal_sign:"
          success_message: "[$NEW_VERSION] New version published! :tada:"
          webhook: "${DISCORD_WEBHOOK}"
  test:
    working_directory: ~/project/
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.12
    # Use a machine with 2 cores and 4GB RAM
    resource_class: small
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Install prerequisites"
          command: "sudo apt update && sudo apt install -y software-properties-common"
      - run:
          name: "Add Python repository"
          command: "sudo add-apt-repository -y ppa:deadsnakes/ppa"
      - run:
          name: "Install Python3.12"
          command: "sudo apt install -y python3.12 && sudo apt install -y python3-pip"
      - run:
          name: "Setup environment"
          command: "make setup && poetry install"
      - run:
          name: "Test"
          command: "make test"
      - discord/status:
          fail_only: true
          failure_message: "Tests failed! :octagonal_sign:"
          webhook: "${DISCORD_WEBHOOK}"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build:
    jobs:
      - test:
          context:
            - nexus-mlcube-publish
            - discord-ml3-libraries
          filters:
            tags:
              ignore: /.*/
      - make-version:
          context:
            - nexus-mlcube-publish
            - discord-ml3-libraries
          requires:
            - test
          filters:
            tags:
              ignore: /.*/
